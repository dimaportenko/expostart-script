#!/usr/bin/env bash

# add help output
for arg in "$@"; do
  if [[ "$arg" == "-h" || "$arg" == "--help" ]]; then
    echo "Usage: expostart [project_name] [options]"
    echo "Options:"
    echo "  -h, --help     output usage information"
    echo "  tw           add tailwind library to the template"
    exit 0
  fi
done


#DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
DIR="$(pwd)"

echo $DIR

# check if project name is present
if [ -n "$1" ]; then
  echo $1
else
  echo "Error! Please enter project name!" 1>&2
  exit 1
fi

# create expo project with typescript template
# echo yes | npx create-expo-app -t expo-template-blank-typescript@sdk-46 $1
echo yes | npx create-expo-app -t expo-template-blank-typescript $1

# go to the project directory
cd "$DIR/$1"

# add dependencies
yarn add -D eslint prettier @react-native-community/eslint-config @typescript-eslint/eslint-plugin eslint-config-prettier

# add eslint config
cat > .eslintrc.js <<EOF
module.exports = {
  extends: ['@react-native-community', "eslint-config-prettier"],
}
EOF

# get scripts directory path
SCRIPTS_DIR="$(dirname -- "${BASH_SOURCE[0]}")/.."

# patch jsons package.json, tsconfig.json, etc
node "$SCRIPTS_DIR/patch-json.js" "$DIR/$1"

# add .idea to gitignore
echo ".idea" >> ".gitignore"

yarn install

# add tailwind function
addTailwind() {
  yarn add twrnc
  SCRIPTS_DIR="$(dirname -- "${BASH_SOURCE[0]}")/.."
  mkdir -p src/lib/tailwind
  cp "$SCRIPTS_DIR/templates/tailwind.config.js" tailwind.config.js
  cp "$SCRIPTS_DIR/templates/tailwind.lib.ts" src/lib/tailwind/index.ts
  cp "$SCRIPTS_DIR/templates/tailwindApp.tsx" App.tsx 
}

# check script input arguments and run functions accordingly found
for arg in "$@"
do
    if [ "$arg" == "tw" ]; then
        echo "tailwind found"
        addTailwind
    fi
done

# run prettier
./node_modules/prettier/bin-prettier.js --write .

# add README.md
echo "# $1" >> README.md

# add changes to the git
git add .
git commit -m 'expostart script updates'
